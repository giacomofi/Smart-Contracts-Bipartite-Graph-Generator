File,Source_Contract,Source_Function,Target_Contract,Chain
ERC20Tornado.sol,ERC20Tornado,constructor,ERC20Tornado,No Chain
ERC20Tornado.sol,ERC20Tornado,_processDeposit,ERC20Tornado,No chain
ERC20Tornado.sol,ERC20Tornado,_processDeposit,ERC20Tornado,No chain
ERC20Tornado.sol,ERC20Tornado,_processDeposit,ERC20Tornado,No chain
cTornado.sol,cTornado,constructor,cTornado,No Chain
cTornado.sol,cTornado,claimComp,cTornado,No chain
cTornado.sol,cTornado,claimComp,cTornado,No chain
cTornado.sol,cTornado,claimComp,cTornado,No chain
Verifier.sol,Verifier,verifyingKey,Pairing,"->alfa1=Pairing->G1Point(uint256(20692898189092739278193869274495556617788530808486270118371701516666252877969),uint256(11713062878292653967971378194351968039596396853904572879488166084231740557279))"
Verifier.sol,Verifier,verifyingKey,Pairing,"->beta2=Pairing->G2Point([uint256(12168528810181263706895252315640534818222943348193302139358377162645029937006),uint256(281120578337195720357474965979947690431622127986816839208576358024608803542)],[uint256(16129176515713072042442734839012966563817890688785805090011011570989315559913),uint256(9011703453772030375124466642203641636825223906145908770308724549646909480510)])"
Verifier.sol,Verifier,verifyingKey,Pairing,"->gamma2=Pairing->G2Point([uint256(11559732032986387107991004021392285783925812861821192530917403151452391805634),uint256(10857046999023057135944570762232829481370756359578518086990519993285655852781)],[uint256(4082367875863433681332203403145435568316851327593401208105741076214120093531),uint256(8495653923123431417604973247489272438418190587263600148770280649306958101930)])"
Verifier.sol,Verifier,verifyingKey,Pairing,"->delta2=Pairing->G2Point([uint256(21280594949518992153305586783242820682644996932183186320680800072133486887432),uint256(150879136433974552800030963899771162647715069685890547489132178314736470662)],[uint256(1081836006956609894549771334721413187913047383331561601606260283167615953295),uint256(11434086686358152335540554643130007307617078324975981257823476472104616196090)])"
Verifier.sol,Verifier,verifyingKey,Pairing,"->IC[0]=Pairing->G1Point(uint256(16225148364316337376768119297456868908427925829817748684139175309620217098814),uint256(5167268689450204162046084442581051565997733233062478317813755636162413164690))"
Verifier.sol,Verifier,verifyingKey,Pairing,"->IC[1]=Pairing->G1Point(uint256(12882377842072682264979317445365303375159828272423495088911985689463022094260),uint256(19488215856665173565526758360510125932214252767275816329232454875804474844786))"
Verifier.sol,Verifier,verifyingKey,Pairing,"->IC[2]=Pairing->G1Point(uint256(13083492661683431044045992285476184182144099829507350352128615182516530014777),uint256(602051281796153692392523702676782023472744522032670801091617246498551238913))"
Verifier.sol,Verifier,verifyingKey,Pairing,"->IC[3]=Pairing->G1Point(uint256(9732465972180335629969421513785602934706096902316483580882842789662669212890),uint256(2776526698606888434074200384264824461688198384989521091253289776235602495678))"
Verifier.sol,Verifier,verifyingKey,Pairing,"->IC[4]=Pairing->G1Point(uint256(8586364274534577154894611080234048648883781955345622578531233113180532234842),uint256(21276134929883121123323359450658320820075698490666870487450985603988214349407))"
Verifier.sol,Verifier,verifyingKey,Pairing,"->IC[5]=Pairing->G1Point(uint256(4910628533171597675018724709631788948355422829499855033965018665300386637884),uint256(20532468890024084510431799098097081600480376127870299142189696620752500664302))"
Verifier.sol,Verifier,verifyingKey,Pairing,"->IC[6]=Pairing->G1Point(uint256(15335858102289947642505450692012116222827233918185150176888641903531542034017),uint256(5311597067667671581646709998171703828965875677637292315055030353779531404812))"
Verifier.sol,Verifier,verifyProof,Pairing,"->A=Pairing->G1Point(p[0],p[1])"
Verifier.sol,Verifier,verifyProof,Pairing,"->B=Pairing->G2Point([p[2],p[3]],[p[4],p[5]])"
Verifier.sol,Verifier,verifyProof,Pairing,"->C=Pairing->G1Point(p[6],p[7])"
Verifier.sol,Verifier,verifyProof,Pairing,"->G1Pointmemoryvk_x=Pairing->G1Point(0,0)"
Verifier.sol,Verifier,verifyProof,Pairing,No chain
Verifier.sol,Verifier,verifyProof,Pairing,"->plus(vk_x,vk->IC[0])"
Verifier.sol,Verifier,verifyProof,Pairing,"->plus(vk_x,Pairing->scalar_mul(vk->IC[i+1],input[i]))"
Verifier.sol,Verifier,verifyProof,Pairing,No chain
Verifier.sol,Verifier,verifyProof,Pairing,"->pairing(Pairing->negate(_proof->A),_proof->B,vk->alfa1,vk->beta2,vk_x,vk->gamma2,_proof->C,vk->delta2)"
Verifier.sol,Verifier,verifyProof,Pairing,No chain
Verifier.sol,Verifier,verifyProof,Pairing,"->G1Point(0,0);"
Tornado.sol,Tornado,constructor,IVerifier,No chain
Tornado.sol,Tornado,constructor,Tornado,No Chain
Tornado.sol,Tornado,deposit,Tornado,nonReentrant
Tornado.sol,Tornado,deposit,Tornado,Deposit
Tornado.sol,Tornado,withdraw,Tornado,nonReentrant
Tornado.sol,Tornado,withdraw,Tornado,Withdrawal
ETHTornado.sol,ETHTornado,constructor,ETHTornado,No Chain
MerkleTreeWithHistory.sol,MerkleTreeWithHistory,constructor,IHasher,No chain
MerkleTreeWithHistory.sol,MerkleTreeWithHistory,hashLeftRight,IHasher,No chain
MerkleTreeWithHistoryMock.sol,MerkleTreeWithHistoryMock,constructor,MerkleTreeWithHistoryMock,No Chain